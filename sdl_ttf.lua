---Automatically generated bindings generated by ffi-to-lls.lua (https://github.com/Frityet/ffi-to-lls/)
---You can edit this file!
---The following prefix was removed: `TTF_`
---Lua language server will autocomplete both with and without the prefix.
---@meta sdl_ttf

---@class sdl_ttf
local sdl_ttf = {}

---@return SDL_version*?
function sdl_ttf.Linked_Version() end
sdl_ttf.TTF_Linked_Version = sdl_ttf.Linked_Version

---@param major integer*?
---@param minor integer*?
---@param patch integer*?
---@return nil
function sdl_ttf.GetFreeTypeVersion(major, minor, patch) end
sdl_ttf.TTF_GetFreeTypeVersion = sdl_ttf.GetFreeTypeVersion

---@param major integer*?
---@param minor integer*?
---@param patch integer*?
---@return nil
function sdl_ttf.GetHarfBuzzVersion(major, minor, patch) end
sdl_ttf.TTF_GetHarfBuzzVersion = sdl_ttf.GetHarfBuzzVersion

---@param swapped SDL_bool
---@return nil
function sdl_ttf.ByteSwappedUNICODE(swapped) end
sdl_ttf.TTF_ByteSwappedUNICODE = sdl_ttf.ByteSwappedUNICODE

---@class _TTF_Font

---@class _TTF_Font* : ffi.cdata*
---@field [integer] _TTF_Font

---@class _TTF_Font** : ffi.cdata*
---@field [integer] _TTF_Font*

---@alias TTF_Font _TTF_Font

---@class TTF_Font* : ffi.cdata*
---@field [integer] TTF_Font

---@class TTF_Font** : ffi.cdata*
---@field [integer] TTF_Font*

---@return integer
function sdl_ttf.Init() end
sdl_ttf.TTF_Init = sdl_ttf.Init

---@param file string
---@param ptsize integer
---@return TTF_Font*?
function sdl_ttf.OpenFont(file, ptsize) end
sdl_ttf.TTF_OpenFont = sdl_ttf.OpenFont

---@param file string
---@param ptsize integer
---@param index integer
---@return TTF_Font*?
function sdl_ttf.OpenFontIndex(file, ptsize, index) end
sdl_ttf.TTF_OpenFontIndex = sdl_ttf.OpenFontIndex

---@param src SDL_RWops*?
---@param freesrc integer
---@param ptsize integer
---@return TTF_Font*?
function sdl_ttf.OpenFontRW(src, freesrc, ptsize) end
sdl_ttf.TTF_OpenFontRW = sdl_ttf.OpenFontRW

---@param src SDL_RWops*?
---@param freesrc integer
---@param ptsize integer
---@param index integer
---@return TTF_Font*?
function sdl_ttf.OpenFontIndexRW(src, freesrc, ptsize, index) end
sdl_ttf.TTF_OpenFontIndexRW = sdl_ttf.OpenFontIndexRW

---@param file string
---@param ptsize integer
---@param hdpi integer
---@param vdpi integer
---@return TTF_Font*?
function sdl_ttf.OpenFontDPI(file, ptsize, hdpi, vdpi) end
sdl_ttf.TTF_OpenFontDPI = sdl_ttf.OpenFontDPI

---@param file string
---@param ptsize integer
---@param index integer
---@param hdpi integer
---@param vdpi integer
---@return TTF_Font*?
function sdl_ttf.OpenFontIndexDPI(file, ptsize, index, hdpi, vdpi) end
sdl_ttf.TTF_OpenFontIndexDPI = sdl_ttf.OpenFontIndexDPI

---@param src SDL_RWops*?
---@param freesrc integer
---@param ptsize integer
---@param hdpi integer
---@param vdpi integer
---@return TTF_Font*?
function sdl_ttf.OpenFontDPIRW(src, freesrc, ptsize, hdpi, vdpi) end
sdl_ttf.TTF_OpenFontDPIRW = sdl_ttf.OpenFontDPIRW

---@param src SDL_RWops*?
---@param freesrc integer
---@param ptsize integer
---@param index integer
---@param hdpi integer
---@param vdpi integer
---@return TTF_Font*?
function sdl_ttf.OpenFontIndexDPIRW(src, freesrc, ptsize, index, hdpi, vdpi) end
sdl_ttf.TTF_OpenFontIndexDPIRW = sdl_ttf.OpenFontIndexDPIRW

---@param font TTF_Font*?
---@param ptsize integer
---@return integer
function sdl_ttf.SetFontSize(font, ptsize) end
sdl_ttf.TTF_SetFontSize = sdl_ttf.SetFontSize

---@param font TTF_Font*?
---@param ptsize integer
---@param hdpi integer
---@param vdpi integer
---@return integer
function sdl_ttf.SetFontSizeDPI(font, ptsize, hdpi, vdpi) end
sdl_ttf.TTF_SetFontSizeDPI = sdl_ttf.SetFontSizeDPI

---@param font TTF_Font*?
---@return integer
function sdl_ttf.GetFontStyle(font) end
sdl_ttf.TTF_GetFontStyle = sdl_ttf.GetFontStyle

---@param font TTF_Font*?
---@param style integer
---@return nil
function sdl_ttf.SetFontStyle(font, style) end
sdl_ttf.TTF_SetFontStyle = sdl_ttf.SetFontStyle

---@param font TTF_Font*?
---@return integer
function sdl_ttf.GetFontOutline(font) end
sdl_ttf.TTF_GetFontOutline = sdl_ttf.GetFontOutline

---@param font TTF_Font*?
---@param outline integer
---@return nil
function sdl_ttf.SetFontOutline(font, outline) end
sdl_ttf.TTF_SetFontOutline = sdl_ttf.SetFontOutline

---@param font TTF_Font*?
---@return integer
function sdl_ttf.GetFontHinting(font) end
sdl_ttf.TTF_GetFontHinting = sdl_ttf.GetFontHinting

---@param font TTF_Font*?
---@param hinting integer
---@return nil
function sdl_ttf.SetFontHinting(font, hinting) end
sdl_ttf.TTF_SetFontHinting = sdl_ttf.SetFontHinting

---@param font TTF_Font*?
---@return integer
function sdl_ttf.GetFontWrappedAlign(font) end
sdl_ttf.TTF_GetFontWrappedAlign = sdl_ttf.GetFontWrappedAlign

---@param font TTF_Font*?
---@param align integer
---@return nil
function sdl_ttf.SetFontWrappedAlign(font, align) end
sdl_ttf.TTF_SetFontWrappedAlign = sdl_ttf.SetFontWrappedAlign

---@param font TTF_Font*?
---@return integer
function sdl_ttf.FontHeight(font) end
sdl_ttf.TTF_FontHeight = sdl_ttf.FontHeight

---@param font TTF_Font*?
---@return integer
function sdl_ttf.FontAscent(font) end
sdl_ttf.TTF_FontAscent = sdl_ttf.FontAscent

---@param font TTF_Font*?
---@return integer
function sdl_ttf.FontDescent(font) end
sdl_ttf.TTF_FontDescent = sdl_ttf.FontDescent

---@param font TTF_Font*?
---@return integer
function sdl_ttf.FontLineSkip(font) end
sdl_ttf.TTF_FontLineSkip = sdl_ttf.FontLineSkip

---@param font TTF_Font*?
---@return integer
function sdl_ttf.GetFontKerning(font) end
sdl_ttf.TTF_GetFontKerning = sdl_ttf.GetFontKerning

---@param font TTF_Font*?
---@param allowed integer
---@return nil
function sdl_ttf.SetFontKerning(font, allowed) end
sdl_ttf.TTF_SetFontKerning = sdl_ttf.SetFontKerning

---@param font TTF_Font*?
---@return integer
function sdl_ttf.FontFaces(font) end
sdl_ttf.TTF_FontFaces = sdl_ttf.FontFaces

---@param font TTF_Font*?
---@return integer
function sdl_ttf.FontFaceIsFixedWidth(font) end
sdl_ttf.TTF_FontFaceIsFixedWidth = sdl_ttf.FontFaceIsFixedWidth

---@param font TTF_Font*?
---@return string
function sdl_ttf.FontFaceFamilyName(font) end
sdl_ttf.TTF_FontFaceFamilyName = sdl_ttf.FontFaceFamilyName

---@param font TTF_Font*?
---@return string
function sdl_ttf.FontFaceStyleName(font) end
sdl_ttf.TTF_FontFaceStyleName = sdl_ttf.FontFaceStyleName

---@param font TTF_Font*?
---@param ch Uint16
---@return integer
function sdl_ttf.GlyphIsProvided(font, ch) end
sdl_ttf.TTF_GlyphIsProvided = sdl_ttf.GlyphIsProvided

---@param font TTF_Font*?
---@param ch Uint32
---@return integer
function sdl_ttf.GlyphIsProvided32(font, ch) end
sdl_ttf.TTF_GlyphIsProvided32 = sdl_ttf.GlyphIsProvided32

---@param font TTF_Font*?
---@param ch Uint16
---@param minx integer*?
---@param maxx integer*?
---@param miny integer*?
---@param maxy integer*?
---@param advance integer*?
---@return integer
function sdl_ttf.GlyphMetrics(font, ch, minx, maxx, miny, maxy, advance) end
sdl_ttf.TTF_GlyphMetrics = sdl_ttf.GlyphMetrics

---@param font TTF_Font*?
---@param ch Uint32
---@param minx integer*?
---@param maxx integer*?
---@param miny integer*?
---@param maxy integer*?
---@param advance integer*?
---@return integer
function sdl_ttf.GlyphMetrics32(font, ch, minx, maxx, miny, maxy, advance) end
sdl_ttf.TTF_GlyphMetrics32 = sdl_ttf.GlyphMetrics32

---@param font TTF_Font*?
---@param text string
---@param w integer*?
---@param h integer*?
---@return integer
function sdl_ttf.SizeText(font, text, w, h) end
sdl_ttf.TTF_SizeText = sdl_ttf.SizeText

---@param font TTF_Font*?
---@param text string
---@param w integer*?
---@param h integer*?
---@return integer
function sdl_ttf.SizeUTF8(font, text, w, h) end
sdl_ttf.TTF_SizeUTF8 = sdl_ttf.SizeUTF8

---@param font TTF_Font*?
---@param text Uint16*?
---@param w integer*?
---@param h integer*?
---@return integer
function sdl_ttf.SizeUNICODE(font, text, w, h) end
sdl_ttf.TTF_SizeUNICODE = sdl_ttf.SizeUNICODE

---@param font TTF_Font*?
---@param text string
---@param measure_width integer
---@param extent integer*?
---@param count integer*?
---@return integer
function sdl_ttf.MeasureText(font, text, measure_width, extent, count) end
sdl_ttf.TTF_MeasureText = sdl_ttf.MeasureText

---@param font TTF_Font*?
---@param text string
---@param measure_width integer
---@param extent integer*?
---@param count integer*?
---@return integer
function sdl_ttf.MeasureUTF8(font, text, measure_width, extent, count) end
sdl_ttf.TTF_MeasureUTF8 = sdl_ttf.MeasureUTF8

---@param font TTF_Font*?
---@param text Uint16*?
---@param measure_width integer
---@param extent integer*?
---@param count integer*?
---@return integer
function sdl_ttf.MeasureUNICODE(font, text, measure_width, extent, count) end
sdl_ttf.TTF_MeasureUNICODE = sdl_ttf.MeasureUNICODE

---@param font TTF_Font*?
---@param text string
---@param fg SDL_Color
---@return SDL_Surface*?
function sdl_ttf.RenderText_Solid(font, text, fg) end
sdl_ttf.TTF_RenderText_Solid = sdl_ttf.RenderText_Solid

---@param font TTF_Font*?
---@param text string
---@param fg SDL_Color
---@return SDL_Surface*?
function sdl_ttf.RenderUTF8_Solid(font, text, fg) end
sdl_ttf.TTF_RenderUTF8_Solid = sdl_ttf.RenderUTF8_Solid

---@param font TTF_Font*?
---@param text Uint16*?
---@param fg SDL_Color
---@return SDL_Surface*?
function sdl_ttf.RenderUNICODE_Solid(font, text, fg) end
sdl_ttf.TTF_RenderUNICODE_Solid = sdl_ttf.RenderUNICODE_Solid

---@param font TTF_Font*?
---@param text string
---@param fg SDL_Color
---@param wrapLength Uint32
---@return SDL_Surface*?
function sdl_ttf.RenderText_Solid_Wrapped(font, text, fg, wrapLength) end
sdl_ttf.TTF_RenderText_Solid_Wrapped = sdl_ttf.RenderText_Solid_Wrapped

---@param font TTF_Font*?
---@param text string
---@param fg SDL_Color
---@param wrapLength Uint32
---@return SDL_Surface*?
function sdl_ttf.RenderUTF8_Solid_Wrapped(font, text, fg, wrapLength) end
sdl_ttf.TTF_RenderUTF8_Solid_Wrapped = sdl_ttf.RenderUTF8_Solid_Wrapped

---@param font TTF_Font*?
---@param text Uint16*?
---@param fg SDL_Color
---@param wrapLength Uint32
---@return SDL_Surface*?
function sdl_ttf.RenderUNICODE_Solid_Wrapped(font, text, fg, wrapLength) end
sdl_ttf.TTF_RenderUNICODE_Solid_Wrapped = sdl_ttf.RenderUNICODE_Solid_Wrapped

---@param font TTF_Font*?
---@param ch Uint16
---@param fg SDL_Color
---@return SDL_Surface*?
function sdl_ttf.RenderGlyph_Solid(font, ch, fg) end
sdl_ttf.TTF_RenderGlyph_Solid = sdl_ttf.RenderGlyph_Solid

---@param font TTF_Font*?
---@param ch Uint32
---@param fg SDL_Color
---@return SDL_Surface*?
function sdl_ttf.RenderGlyph32_Solid(font, ch, fg) end
sdl_ttf.TTF_RenderGlyph32_Solid = sdl_ttf.RenderGlyph32_Solid

---@param font TTF_Font*?
---@param text string
---@param fg SDL_Color
---@param bg SDL_Color
---@return SDL_Surface*?
function sdl_ttf.RenderText_Shaded(font, text, fg, bg) end
sdl_ttf.TTF_RenderText_Shaded = sdl_ttf.RenderText_Shaded

---@param font TTF_Font*?
---@param text string
---@param fg SDL_Color
---@param bg SDL_Color
---@return SDL_Surface*?
function sdl_ttf.RenderUTF8_Shaded(font, text, fg, bg) end
sdl_ttf.TTF_RenderUTF8_Shaded = sdl_ttf.RenderUTF8_Shaded

---@param font TTF_Font*?
---@param text Uint16*?
---@param fg SDL_Color
---@param bg SDL_Color
---@return SDL_Surface*?
function sdl_ttf.RenderUNICODE_Shaded(font, text, fg, bg) end
sdl_ttf.TTF_RenderUNICODE_Shaded = sdl_ttf.RenderUNICODE_Shaded

---@param font TTF_Font*?
---@param text string
---@param fg SDL_Color
---@param bg SDL_Color
---@param wrapLength Uint32
---@return SDL_Surface*?
function sdl_ttf.RenderText_Shaded_Wrapped(font, text, fg, bg, wrapLength) end
sdl_ttf.TTF_RenderText_Shaded_Wrapped = sdl_ttf.RenderText_Shaded_Wrapped

---@param font TTF_Font*?
---@param text string
---@param fg SDL_Color
---@param bg SDL_Color
---@param wrapLength Uint32
---@return SDL_Surface*?
function sdl_ttf.RenderUTF8_Shaded_Wrapped(font, text, fg, bg, wrapLength) end
sdl_ttf.TTF_RenderUTF8_Shaded_Wrapped = sdl_ttf.RenderUTF8_Shaded_Wrapped

---@param font TTF_Font*?
---@param text Uint16*?
---@param fg SDL_Color
---@param bg SDL_Color
---@param wrapLength Uint32
---@return SDL_Surface*?
function sdl_ttf.RenderUNICODE_Shaded_Wrapped(font, text, fg, bg, wrapLength) end
sdl_ttf.TTF_RenderUNICODE_Shaded_Wrapped = sdl_ttf.RenderUNICODE_Shaded_Wrapped

---@param font TTF_Font*?
---@param ch Uint16
---@param fg SDL_Color
---@param bg SDL_Color
---@return SDL_Surface*?
function sdl_ttf.RenderGlyph_Shaded(font, ch, fg, bg) end
sdl_ttf.TTF_RenderGlyph_Shaded = sdl_ttf.RenderGlyph_Shaded

---@param font TTF_Font*?
---@param ch Uint32
---@param fg SDL_Color
---@param bg SDL_Color
---@return SDL_Surface*?
function sdl_ttf.RenderGlyph32_Shaded(font, ch, fg, bg) end
sdl_ttf.TTF_RenderGlyph32_Shaded = sdl_ttf.RenderGlyph32_Shaded

---@param font TTF_Font*?
---@param text string
---@param fg SDL_Color
---@return SDL_Surface*?
function sdl_ttf.RenderText_Blended(font, text, fg) end
sdl_ttf.TTF_RenderText_Blended = sdl_ttf.RenderText_Blended

---@param font TTF_Font*?
---@param text string
---@param fg SDL_Color
---@return SDL_Surface*?
function sdl_ttf.RenderUTF8_Blended(font, text, fg) end
sdl_ttf.TTF_RenderUTF8_Blended = sdl_ttf.RenderUTF8_Blended

---@param font TTF_Font*?
---@param text Uint16*?
---@param fg SDL_Color
---@return SDL_Surface*?
function sdl_ttf.RenderUNICODE_Blended(font, text, fg) end
sdl_ttf.TTF_RenderUNICODE_Blended = sdl_ttf.RenderUNICODE_Blended

---@param font TTF_Font*?
---@param text string
---@param fg SDL_Color
---@param wrapLength Uint32
---@return SDL_Surface*?
function sdl_ttf.RenderText_Blended_Wrapped(font, text, fg, wrapLength) end
sdl_ttf.TTF_RenderText_Blended_Wrapped = sdl_ttf.RenderText_Blended_Wrapped

---@param font TTF_Font*?
---@param text string
---@param fg SDL_Color
---@param wrapLength Uint32
---@return SDL_Surface*?
function sdl_ttf.RenderUTF8_Blended_Wrapped(font, text, fg, wrapLength) end
sdl_ttf.TTF_RenderUTF8_Blended_Wrapped = sdl_ttf.RenderUTF8_Blended_Wrapped

---@param font TTF_Font*?
---@param text Uint16*?
---@param fg SDL_Color
---@param wrapLength Uint32
---@return SDL_Surface*?
function sdl_ttf.RenderUNICODE_Blended_Wrapped(font, text, fg, wrapLength) end
sdl_ttf.TTF_RenderUNICODE_Blended_Wrapped = sdl_ttf.RenderUNICODE_Blended_Wrapped

---@param font TTF_Font*?
---@param ch Uint16
---@param fg SDL_Color
---@return SDL_Surface*?
function sdl_ttf.RenderGlyph_Blended(font, ch, fg) end
sdl_ttf.TTF_RenderGlyph_Blended = sdl_ttf.RenderGlyph_Blended

---@param font TTF_Font*?
---@param ch Uint32
---@param fg SDL_Color
---@return SDL_Surface*?
function sdl_ttf.RenderGlyph32_Blended(font, ch, fg) end
sdl_ttf.TTF_RenderGlyph32_Blended = sdl_ttf.RenderGlyph32_Blended

---@param font TTF_Font*?
---@param text string
---@param fg SDL_Color
---@param bg SDL_Color
---@return SDL_Surface*?
function sdl_ttf.RenderText_LCD(font, text, fg, bg) end
sdl_ttf.TTF_RenderText_LCD = sdl_ttf.RenderText_LCD

---@param font TTF_Font*?
---@param text string
---@param fg SDL_Color
---@param bg SDL_Color
---@return SDL_Surface*?
function sdl_ttf.RenderUTF8_LCD(font, text, fg, bg) end
sdl_ttf.TTF_RenderUTF8_LCD = sdl_ttf.RenderUTF8_LCD

---@param font TTF_Font*?
---@param text Uint16*?
---@param fg SDL_Color
---@param bg SDL_Color
---@return SDL_Surface*?
function sdl_ttf.RenderUNICODE_LCD(font, text, fg, bg) end
sdl_ttf.TTF_RenderUNICODE_LCD = sdl_ttf.RenderUNICODE_LCD

---@param font TTF_Font*?
---@param text string
---@param fg SDL_Color
---@param bg SDL_Color
---@param wrapLength Uint32
---@return SDL_Surface*?
function sdl_ttf.RenderText_LCD_Wrapped(font, text, fg, bg, wrapLength) end
sdl_ttf.TTF_RenderText_LCD_Wrapped = sdl_ttf.RenderText_LCD_Wrapped

---@param font TTF_Font*?
---@param text string
---@param fg SDL_Color
---@param bg SDL_Color
---@param wrapLength Uint32
---@return SDL_Surface*?
function sdl_ttf.RenderUTF8_LCD_Wrapped(font, text, fg, bg, wrapLength) end
sdl_ttf.TTF_RenderUTF8_LCD_Wrapped = sdl_ttf.RenderUTF8_LCD_Wrapped

---@param font TTF_Font*?
---@param text Uint16*?
---@param fg SDL_Color
---@param bg SDL_Color
---@param wrapLength Uint32
---@return SDL_Surface*?
function sdl_ttf.RenderUNICODE_LCD_Wrapped(font, text, fg, bg, wrapLength) end
sdl_ttf.TTF_RenderUNICODE_LCD_Wrapped = sdl_ttf.RenderUNICODE_LCD_Wrapped

---@param font TTF_Font*?
---@param ch Uint16
---@param fg SDL_Color
---@param bg SDL_Color
---@return SDL_Surface*?
function sdl_ttf.RenderGlyph_LCD(font, ch, fg, bg) end
sdl_ttf.TTF_RenderGlyph_LCD = sdl_ttf.RenderGlyph_LCD

---@param font TTF_Font*?
---@param ch Uint32
---@param fg SDL_Color
---@param bg SDL_Color
---@return SDL_Surface*?
function sdl_ttf.RenderGlyph32_LCD(font, ch, fg, bg) end
sdl_ttf.TTF_RenderGlyph32_LCD = sdl_ttf.RenderGlyph32_LCD

---@param font TTF_Font*?
---@return nil
function sdl_ttf.CloseFont(font) end
sdl_ttf.TTF_CloseFont = sdl_ttf.CloseFont

---@return nil
function sdl_ttf.Quit() end
sdl_ttf.TTF_Quit = sdl_ttf.Quit

---@return integer
function sdl_ttf.WasInit() end
sdl_ttf.TTF_WasInit = sdl_ttf.WasInit

---@param font TTF_Font*?
---@param prev_index integer
---@param index integer
---@return integer
function sdl_ttf.GetFontKerningSize(font, prev_index, index) end
sdl_ttf.TTF_GetFontKerningSize = sdl_ttf.GetFontKerningSize

---@param font TTF_Font*?
---@param previous_ch Uint16
---@param ch Uint16
---@return integer
function sdl_ttf.GetFontKerningSizeGlyphs(font, previous_ch, ch) end
sdl_ttf.TTF_GetFontKerningSizeGlyphs = sdl_ttf.GetFontKerningSizeGlyphs

---@param font TTF_Font*?
---@param previous_ch Uint32
---@param ch Uint32
---@return integer
function sdl_ttf.GetFontKerningSizeGlyphs32(font, previous_ch, ch) end
sdl_ttf.TTF_GetFontKerningSizeGlyphs32 = sdl_ttf.GetFontKerningSizeGlyphs32

---@param font TTF_Font*?
---@param on_off SDL_bool
---@return integer
function sdl_ttf.SetFontSDF(font, on_off) end
sdl_ttf.TTF_SetFontSDF = sdl_ttf.SetFontSDF

---@param font TTF_Font*?
---@return SDL_bool
function sdl_ttf.GetFontSDF(font) end
sdl_ttf.TTF_GetFontSDF = sdl_ttf.GetFontSDF

---@enum TTF_Direction
local TTF_Direction = {
    TTF_DIRECTION_LTR = 0,
    TTF_DIRECTION_RTL = 1,
    TTF_DIRECTION_TTB = 2,
    TTF_DIRECTION_BTT = 3,
}

sdl_ttf.TTF_DIRECTION_LTR = TTF_Direction.TTF_DIRECTION_LTR
sdl_ttf.TTF_DIRECTION_RTL = TTF_Direction.TTF_DIRECTION_RTL
sdl_ttf.TTF_DIRECTION_TTB = TTF_Direction.TTF_DIRECTION_TTB
sdl_ttf.TTF_DIRECTION_BTT = TTF_Direction.TTF_DIRECTION_BTT

---@class TTF_Direction* : ffi.cdata*
---@field [integer] TTF_Direction

---@class TTF_Direction** : ffi.cdata*
---@field [integer] TTF_Direction*

---@param direction integer
---@return integer
function sdl_ttf.SetDirection(direction) end
sdl_ttf.TTF_SetDirection = sdl_ttf.SetDirection

---@param script integer
---@return integer
function sdl_ttf.SetScript(script) end
sdl_ttf.TTF_SetScript = sdl_ttf.SetScript

---@param font TTF_Font*?
---@param direction TTF_Direction
---@return integer
function sdl_ttf.SetFontDirection(font, direction) end
sdl_ttf.TTF_SetFontDirection = sdl_ttf.SetFontDirection

---@param font TTF_Font*?
---@param script string
---@return integer
function sdl_ttf.SetFontScriptName(font, script) end
sdl_ttf.TTF_SetFontScriptName = sdl_ttf.SetFontScriptName

return sdl_ttf
